# position: 2
prefix schema: <https://schema.org/>
PREFIX bf: <http://id.loc.gov/ontologies/bibframe/>

PREFIX : <https://data.hetarchief.be/ns/test/>

CONSTRUCT {
  ?id :target "graph.collection";
  :id ?id;
  :bibframe_preceeded_by ?bibframe_preceeded_by;
  :bibframe_succeeded_by ?bibframe_succeeded_by; 
  :bibframe_supplement_to ?bibframe_supplement_to;
  :collection_type ?collection_type;
  :schema_alternate_name ?schema_alternate_name;
  :schema_end_date ?schema_end_date;
  :schema_identifier ?schema_identifier ;
  :schema_is_part_of ?schema_is_part_of;
  :schema_location_created ?schema_location_created;
  :schema_name ?schema_name;
  :schema_publisher ?schema_publisher;
  :schema_season_number ?schema_season_number;
  :schema_start_date ?schema_start_date
}
WHERE {
  {
    ?id a schema:Newspaper;
        schema:identifier ?schema_identifier;
        schema:name ?schema_name_res;
        schema:hasPart ?serie.

    OPTIONAL {
      ?serie schema:locationCreated/schema:name ?schema_location_created_res.
      FILTER langMatches(lang(?schema_location_created_res), "nl")
    }

    OPTIONAL {    
      ?serie  schema:endDate ?schema_end_date_res.
    }

    OPTIONAL {
      ?serie schema:startDate ?schema_start_date_res.
    }

    OPTIONAL {
      ?serie schema:publisher ?schema_publisher_res.
    }

    #OPTIONAL { ?id bf:preceededBy ?bibframe_preceeded_by }

    #OPTIONAL { ?id bf:succeededBy ?bibframe_succeeded_by }

    #OPTIONAL { ?id bf:supplementTo ?bibframe_supplement_to } 
    BIND ("newspaper" AS ?collection_type)
  }
  UNION {
    ?id a schema:Episode; schema:name ?schema_name_res.
    BIND ("episode" AS ?collection_type)
  }
  UNION {
    ?id a schema:CreativeWorkSeries; schema:name ?schema_name_res.
    OPTIONAL { ?id schema:isPartOf ?schema_is_part_of }
    BIND ("series" AS ?collection_type)
  }
  UNION {
    ?id a schema:CreativeWorkSeason; schema:name ?schema_name_res;
    OPTIONAL { ?id schema:seasonNumber ?schema_season_number }
    BIND ("season" AS ?collection_type)
  }
  UNION {
    ?id a schema:ArchiveComponent; schema:name ?schema_name_res.
    OPTIONAL { ?id schema:isPartOf ?schema_is_part_of }
    BIND ("archive" AS ?collection_type)
  }
  #?x schema:isPartOf ?id.
}